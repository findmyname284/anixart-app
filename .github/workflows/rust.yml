name: Rust CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  linux-build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - run: rustup default stable
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-4-dev \
            libgirepository1.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            build-essential \
            libadwaita-1-dev \
            pkg-config \
            libssl-dev
      - name: Build project
        run: cargo build --release
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: anixart-app-linux
          path: target/release/anixart-app
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup MSYS2 and install dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: |
            mingw-w64-x86_64-gtk4
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-rust
            mingw-w64-x86_64-libadwaita
      - name: Build (inside MSYS2)
        shell: msys2 {0}
        run: cargo build --release
      - name: Fix DLL dependencies
        shell: powershell
        run: |
          $sourceDir = "C:\msys64\ucrt64\bin\"

          if (-not (Test-Path $sourceDir)) {
              Write-Host "ERROR: Source directory $sourceDir does not exist!"
              Get-ChildItem C:\msys64
              exit 1
          }

          $destDir = "${{ github.workspace }}\target\release\"

          if (-not (Test-Path $destDir)) {
              New-Item -ItemType Directory -Path $destDir -Force
          }

          Write-Host "Copying DLLs from $sourceDir to $destDir"

          $dlls = Get-ChildItem -Path $sourceDir -Filter *.dll
          if ($dlls.Count -eq 0) {
              Write-Host "WARNING: No DLLs found in $sourceDir"
          } else {
              $dlls | Copy-Item -Destination $destDir -Force
              Write-Host "Copied $($dlls.Count) DLL files"
          }

          Write-Host "Copied files:"
          Get-ChildItem -Path $destDir -Filter *.dll | Select-Object Name
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: ${{ github.workspace }}/target/release/*.exe ${{ github.workspace }}/target/release/*.dll
