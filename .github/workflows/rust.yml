name: Rust CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      # Install Rust
      - name: Install Rust
        shell: bash
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - name: Add Rust to PATH
        shell: bash
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      # Linux-specific steps
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-4-dev \
            libgirepository1.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            build-essential \
            libadwaita-1-dev \
            pkg-config
      # Windows-specific steps
      - name: Install Chocolatey (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      - name: Install MSYS2 (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: choco install -y msys2
      - name: Install GTK dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          # Используем явный путь к MSYS2 bash
          $msysPath = "C:\tools\msys64\usr\bin\bash.exe"

          # Первое обновление (может потребовать перезапуска)
          & $msysPath -lc "pacman --noconfirm -Syuu" 2>&1 | Out-Host

          # Второе обновление (на случай частичного обновления)
          & $msysPath -lc "pacman --noconfirm -Syuu" 2>&1 | Out-Host

          # Установка зависимостей
          & $msysPath -lc "pacman --needed --noconfirm -S mingw-w64-x86_64-gtk4 mingw-w64-x86_64-pkg-config mingw-w64-x86_64-cairo mingw-w64-x86_64-gobject-introspection mingw-w64-x86_64-toolchain" 2>&1 | Out-Host

          # Добавление в PATH
          $mingwPath = "C:\tools\msys64\mingw64\bin"
          $env:PATH = "$mingwPath;$env:PATH"
          echo "$mingwPath" | Out-File -FilePath $env:GITHUB_PATH -Append -Encoding utf8

          # Установка переменных окружения
          echo "PKG_CONFIG_PATH=C:\tools\msys64\mingw64\lib\pkgconfig" >> $env:GITHUB_ENV
          echo "GTK_LIB_DIR=C:\tools\msys64\mingw64\lib" >> $env:GITHUB_ENV
          echo "GTK_INCLUDE_DIR=C:\tools\msys64\mingw64\include" >> $env:GITHUB_ENV
      - name: Add Windows target
        if: matrix.os == 'windows-latest'
        run: rustup target add x86_64-pc-windows-msvc
      # Build project
      - name: Build project
        env:
          PKG_CONFIG_ALLOW_CROSS: 1
          RUSTFLAGS: -C target-feature=+crt-static
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cargo build --release --target x86_64-pc-windows-msvc
          else
            cargo build --release
          fi
      # Upload artifacts
      - name: Upload Linux artifact
        if: matrix.os == 'ubuntu-24.04'
        uses: actions/upload-artifact@v4
        with:
          name: anixart-app-linux
          path: target/release/anixart-app
      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: anixart-app-windows.exe
          path: target/x86_64-pc-windows-msvc/release/anixart-app.exe
