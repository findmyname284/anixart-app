name: Rust CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      
      # Install Rust (common for all OS)
      - name: Install Rust
        shell: bash
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - name: Add Rust to PATH
        shell: bash
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
      # Linux-specific steps
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-4-dev \
            libgirepository1.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            build-essential \
            libadwaita-1-dev \
            pkg-config
            
      # Windows-specific steps
      - name: Install Python (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install build tools (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          choco install -y pkgconfiglite
          set PKG_CONFIG_PATH=C:\gtk-build\gtk\x64\release\lib\pkgconfig
          echo "PKG_CONFIG_PATH=%PKG_CONFIG_PATH%" >> %GITHUB_ENV%
          
      - name: Install gvsbuild and build GTK (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          pip install gvsbuild
          gvsbuild build --vs-ver 17 --enable-gi --py wheel gtk4
          
      - name: Setup GTK environment (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          echo "C:\gtk-build\gtk\x64\release\bin" >> %GITHUB_PATH%
          echo "GTK_LIB_DIR=C:\gtk-build\gtk\x64\release\lib" >> %GITHUB_ENV%
          echo "GTK_INCLUDE_DIR=C:\gtk-build\gtk\x64\release\include" >> %GITHUB_ENV%
          echo "RUSTFLAGS=-C target-feature=+crt-static" >> %GITHUB_ENV%
          
      - name: Add Windows target
        if: matrix.os == 'windows-latest'
        run: rustup target add x86_64-pc-windows-msvc
        
      # Build project
      - name: Build project
        env:
          PKG_CONFIG_ALLOW_CROSS: 1
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cargo build --release --target x86_64-pc-windows-msvc
          else
            cargo build --release
          fi
          
      # Upload artifacts
      - name: Upload Linux artifact
        if: matrix.os == 'ubuntu-24.04'
        uses: actions/upload-artifact@v4
        with:
          name: anixart-app-linux
          path: target/release/anixart-app
          
      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: anixart-app-windows.exe
          path: target/x86_64-pc-windows-msvc/release/anixart-app.exe