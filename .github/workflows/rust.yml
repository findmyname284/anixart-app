name: Rust CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      # Install Rust
      - name: Install Rust
        shell: bash
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - name: Add Rust to PATH
        shell: bash
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      # Linux-specific steps
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-4-dev \
            libgirepository1.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            build-essential \
            libadwaita-1-dev \
            pkg-config
      # Windows-specific steps
      - name: Install Chocolatey (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      - name: Install MSYS2 and dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          choco install -y msys2
          # Обновляем окружение PATH для текущей сессии
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
      - name: Install GTK with MSYS2 (Windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          pacman -Syu --noconfirm
          pacman -S --needed --noconfirm \
            mingw-w64-x86_64-gtk4 \
            mingw-w64-x86_64-pkg-config \
            mingw-w64-x86_64-cairo \
            mingw-w64-x86_64-gobject-introspection \
            mingw-w64-x86_64-toolchain
          echo "C:/msys64/mingw64/bin" >> $GITHUB_PATH
          echo "PKG_CONFIG_PATH=C:/msys64/mingw64/lib/pkgconfig" >> $GITHUB_ENV
      - name: Add Windows target
        if: matrix.os == 'windows-latest'
        run: rustup target add x86_64-pc-windows-msvc
      # Build project
      - name: Build project
        env:
          PKG_CONFIG_ALLOW_CROSS: 1
          RUSTFLAGS: -C target-feature=+crt-static
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cargo build --release --target x86_64-pc-windows-msvc
          else
            cargo build --release
          fi
      # Upload artifacts
      - name: Upload Linux artifact
        if: matrix.os == 'ubuntu-24.04'
        uses: actions/upload-artifact@v4
        with:
          name: anixart-app-linux
          path: target/release/anixart-app
      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: anixart-app-windows.exe
          path: target/x86_64-pc-windows-msvc/release/anixart-app.exe
