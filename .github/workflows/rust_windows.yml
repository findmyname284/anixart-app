name: Rust CI Windows
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # Установка Rust
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          profile: minimal
          override: true
      # Установка GTK4 через MSYS2
      - name: Install GTK dependencies
        shell: pwsh
        run: |
          # Скачивание и установка MSYS2
          Invoke-WebRequest -Uri "https://github.com/msys2/msys2-installer/releases/download/2023-03-18/msys2-x86_64-20230318.exe" -OutFile msys2.exe
          Start-Process -Wait -FilePath .\msys2.exe -ArgumentList 'install','--root','C:/msys64','--confirm-command'

          # Обновление пакетов
          C:\msys64\msys2_shell.cmd -defterm -here -no-start -c "pacman -Syu --noconfirm"

          # Установка GTK4 и зависимостей
          C:\msys64\msys2_shell.cmd -defterm -here -no-start -c "pacman -S --noconfirm mingw-w64-x86_64-gtk4 mingw-w64-x86_64-toolbase"

          # Настройка переменных среды
          $env:PATH = "C:\msys64\mingw64\bin;C:\msys64\usr\bin;$env:PATH"
          Add-Content $env:GITHUB_ENV "PATH=$env:PATH"
          Add-Content $env:GITHUB_ENV "PKG_CONFIG_PATH=C:/msys64/mingw64/lib/pkgconfig"
          Add-Content $env:GITHUB_ENV "GTK_LIB_DIR=C:/msys64/mingw64/lib"
          Add-Content $env:GITHUB_ENV "GTK_INCLUDE_DIR=C:/msys64/mingw64/include"
      # Кеширование зависимостей Cargo
      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~\.cargo\registry
            ~\.cargo\git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      # Сборка проекта
      - name: Build
        run: cargo build --release
      # Копирование необходимых DLL
      - name: Bundle DLLs
        shell: pwsh
        run: |
          $releaseDir = "target\release"
          $dlls = @(
            "libgtk-4-1.dll",
            "libgdk-3-0.dll",
            "libcairo-2.dll",
            "libgobject-2.0-0.dll",
            "libglib-2.0-0.dll",
            "libepoxy-0.dll",
            "libgirepository-1.0-1.dll",
            "libpango-1.0-0.dll",
            "libpangocairo-1.0-0.dll"
          )

          foreach ($dll in $dlls) {
            $source = "C:\msys64\mingw64\bin\$dll"
            if (Test-Path $source) {
              Copy-Item $source -Destination $releaseDir
            }
          }
      # Загрузка артефактов
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: |-
            target/release/anixart-app.exe
            target/release/*.dll
